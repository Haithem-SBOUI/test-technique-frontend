{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/dnma.service\";\nimport * as i2 from \"@angular/router\";\nexport class Eb3ChartComponent {\n  constructor(dnmaService, route) {\n    this.dnmaService = dnmaService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.uai = this.route.snapshot.paramMap.get('uai');\n    this.year = this.route.snapshot.paramMap.get('year');\n    this.fetchData(this.uai, this.year);\n  }\n  fetchData(uai, year) {\n    if (year == \"annee\") {\n      this.byYear(uai);\n    } else {\n      this.byMonth(uai);\n    }\n  }\n  byYear(uai) {\n    this.dnmaService.findByYearAndUai(uai).subscribe(response => {\n      this.dataset = response.results;\n      console.log(this.dataset);\n    }, error => {\n      console.log(error);\n    });\n  }\n  byMonth(uai) {\n    this.dnmaService.findByMonth(uai).subscribe(response => {\n      this.dataset = response.results;\n      this.dataset.sort((a, b) => a[\"month(debutsemaine)\"] - b[\"month(debutsemaine)\"]);\n      console.log(this.dataset);\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function Eb3ChartComponent_Factory(t) {\n    return new (t || Eb3ChartComponent)(i0.ɵɵdirectiveInject(i1.DnmaService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Eb3ChartComponent,\n    selectors: [[\"app-eb3-chart\"]],\n    decls: 2,\n    vars: 0,\n    template: function Eb3ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"eb3-chart works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Eb3ChartComponent","constructor","dnmaService","route","ngOnInit","uai","snapshot","paramMap","get","year","fetchData","byYear","byMonth","findByYearAndUai","subscribe","response","dataset","results","console","log","error","findByMonth","sort","a","b","_","i0","ɵɵdirectiveInject","i1","DnmaService","i2","ActivatedRoute","_2","selectors","decls","vars","template","Eb3ChartComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/haithem_sboui/Documents/My FIles/EFFIOS/copy/test-technique-frontend/src/app/component/eb3-chart/eb3-chart.component.ts","/home/haithem_sboui/Documents/My FIles/EFFIOS/copy/test-technique-frontend/src/app/component/eb3-chart/eb3-chart.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {DnmaService} from \"../../service/dnma.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-eb3-chart',\n  templateUrl: './eb3-chart.component.html',\n  styleUrls: ['./eb3-chart.component.css']\n})\nexport class Eb3ChartComponent implements OnInit {\n  dataset!: any;\n\n  uai!: any;\n  year!: any;\n  constructor(private dnmaService: DnmaService,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.uai = this.route.snapshot.paramMap.get('uai');\n    this.year = this.route.snapshot.paramMap.get('year');\n\n    this.fetchData(this.uai, this.year);\n\n  }\n\n  fetchData(uai :string, year :string){\n    if(year == \"annee\"){\n      this.byYear(uai);\n    }else{\n      this.byMonth(uai);\n    }\n  }\n  byYear(uai: string) {\n    this.dnmaService.findByYearAndUai(uai).subscribe(\n      (response: any) => {\n        this.dataset = response.results;\n        console.log(this.dataset);\n      }, error => {\n        console.log(error);\n\n      }\n    );\n  }\n\n  byMonth(uai: string) {\n    this.dnmaService.findByMonth(uai).subscribe(\n      (response: any) => {\n        this.dataset = response.results;\n        this.dataset.sort((a: any, b: any) => a[\"month(debutsemaine)\"] - b[\"month(debutsemaine)\"]);\n        console.log(this.dataset);\n      }, error => {\n        console.log(error);\n\n      }\n    );\n  }\n\n}\n","<p>eb3-chart works!</p>\n"],"mappings":";;;AASA,OAAM,MAAOA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EACxBC,KAAqB;IADrB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;EACzB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,GAAG,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IAClD,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,MAAM,CAAC;IAEpD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,GAAG,EAAE,IAAI,CAACI,IAAI,CAAC;EAErC;EAEAC,SAASA,CAACL,GAAW,EAAEI,IAAY;IACjC,IAAGA,IAAI,IAAI,OAAO,EAAC;MACjB,IAAI,CAACE,MAAM,CAACN,GAAG,CAAC;KACjB,MAAI;MACH,IAAI,CAACO,OAAO,CAACP,GAAG,CAAC;;EAErB;EACAM,MAAMA,CAACN,GAAW;IAChB,IAAI,CAACH,WAAW,CAACW,gBAAgB,CAACR,GAAG,CAAC,CAACS,SAAS,CAC7CC,QAAa,IAAI;MAChB,IAAI,CAACC,OAAO,GAAGD,QAAQ,CAACE,OAAO;MAC/BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;IAC3B,CAAC,EAAEI,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB,CAAC,CACF;EACH;EAEAR,OAAOA,CAACP,GAAW;IACjB,IAAI,CAACH,WAAW,CAACmB,WAAW,CAAChB,GAAG,CAAC,CAACS,SAAS,CACxCC,QAAa,IAAI;MAChB,IAAI,CAACC,OAAO,GAAGD,QAAQ,CAACE,OAAO;MAC/B,IAAI,CAACD,OAAO,CAACM,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAAC,qBAAqB,CAAC,GAAGC,CAAC,CAAC,qBAAqB,CAAC,CAAC;MAC1FN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;IAC3B,CAAC,EAAEI,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB,CAAC,CACF;EACH;EAAC,QAAAK,CAAA,G;qBA/CUzB,iBAAiB,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBhC,iBAAiB;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT9BZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,uBAAgB;QAAAf,EAAA,CAAAgB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}